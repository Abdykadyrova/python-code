# Задание 1:
    # Напишите программу, которая циклично запрашивает у пользователя любой символ
    # и выводит соответствующие им символы. 
    # Завершает работу при вводе нуля.

# b = 1
# while True:

#     c = input('write number')
#     if c != 0:
#         print(c)
#     elif c == 0:
#         break
#     b *= c
# print(b)    





# Задание 2:
    # Создайте input() который принимает от пользователя дату в формате: "2020-10-24 18:30" и возвращает dictionary разделённую по значениям даты:
    # date = {
    # "year": "2020",
    # "month": "10",
    # .....
    # }
# month_of_day = input('write day of year')
# date = {
#     "year": "2020",
#     "month": "10",
#     "date":"24",
#     "time":"18:30"  
# }
# print(month_of_day,date)





#  Задание 3:
#     Вам дан SET значений:
#     uniques = {3,13,15,27,1,4,8,23,19,12,9,2,17}
#     Создайте функцию которая:
#         Удалит все чётные значения внутри SET, а оставшиеся отсортирует по убыванию.
#     В результате, ваша функция должна вернуть отсортированный SET и неважно, каким будет SET растопленным или замороженным.
###############################################################################


uniques = {3,13,15,27,1,4,8,23,19,12,9,2,17}
def sps(x):
    for i in ls:
        s = i %2
        if s == 0 :
            ls.remove(i)
    print(ls)
ls = list(uniques)
ls.remove(8)

sps(uniques)
        

# print(i)

# print(uniques)
# unty = set(uniques)   
# sorted = sorted(unty,key=ord)  
   
# Задание 3:
    # Вам дан SET значений:
    # uniques = {3,13,15,27,1,4,8,23,19,12,9,2,17}
    # Создайте функцию которая:
        # Удалит все чётные значения внутри SET, а оставшиеся отсортирует по убыванию.
    # В результате, ваша функция должна вернуть отсортированный LIST убыванию.
    ###############
 #Emails = [
#     'aku@gmail.com',
#     'bek@gmail.com',
#     'nur@gmail.com',
#     'aku@gmail.com',
#     'bek@gmail.com',
#     'nur@gmail.com',
# ]
# Emails = set(Emails)
# for Email in Emails:
#     print('на почту', Email, 'отправлен сообщение')
###################






################################################################################
# Задание 4:
#     Дано список 
#     nums = [137, 168, 100, 90, 60, 500]
#     Найти максимум из списка
#     Решение должно производится с помощью цикла while  
#################################################################################

# nums = [137, 168, 100, 90, 60, 500]
# nums.sort()
# a = 0
# mx = nums[a]:
# while a < len(nums):
#     mx = nums[a]:
#     if mx < nums[a]:
#     print(a)

# nums = [137, 168, 100, 90, 60, 500]
# nums
# a = 0
# mx = nums[a]
# while a<len(nums):
#     if mx < a:
#         mx = a
# print(mx)